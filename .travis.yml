language: cpp
dist: bionic
include: &toolchain_amd64
  sudo: false
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - gcc-4.9
        - g++-4.9
        - gcc-4.9-multilib
        - g++-4.9-multilib
        - zip
        - libgtk2.0-0
        - libx11-dev
        - libxkbfile-dev

# linux amd64 toolchain
include: &toolchain_linux_amd64
  <<: *toolchain_amd64
  env:
    - LABEL=amd64_linux
    - ARCH=amd64
    - GPP_COMPILER=g++-4.9
    - GCC_COMPILER=gcc-4.9

# cross toolchain (used as a base for multiarch cross-compilation configurations below) 
include: &toolchain_linux_cross
  dist: trusty
  sudo: required # for dpkg --add-architecture locking

# armhf toolchain
include: &toolchain_linux_armhf
  <<: *toolchain_linux_cross
  env:
    - LABEL=armhf_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=armhf
    - NPM_ARCH=arm
    - GNU_TRIPLET=arm-linux-gnueabihf
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=arm-linux-gnueabihf-g++
    - GCC_COMPILER=arm-linux-gnueabihf-gcc
    - VSCODE_ELECTRON_PLATFORM=arm

# arm64 toolchain
include: &toolchain_linux_arm64
  <<: *toolchain_linux_cross
  env:
    - LABEL=arm64_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=arm64
    - NPM_ARCH=arm
    - GNU_TRIPLET=aarch64-linux-gnu
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=aarch64-linux-gnu-g++
    - GCC_COMPILER=aarch64-linux-gnu-gcc
    - VSCODE_ELECTRON_PLATFORM=arm
    
matrix:
  include:
  - os: linux
    <<: *toolchain_linux_amd64
  - os: linux
    <<: *toolchain_linux_armhf
  - os: linux
    <<: *toolchain_linux_arm64
    
before_install:
        - sudo dpkg --add-architecture armhf
        - sudo apt-get update
        - sudo apt-get install cmake
        - sudo apt-get install openssl
        - sudo apt-get install libssl-dev
script:
  - if [ -e /usr/lib/libuWs.so ];then
    sudo rm /usr/lib/libuWs.so;
    fi
  - ./install-ubuntu.sh
  - mkdir build
  - cd build
  - cmake .. && make